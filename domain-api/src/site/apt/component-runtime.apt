<<<ComponentRuntime>>>

	As of version 2.2.0-SNAPSHOT

	The <<<ComponentRuntime>>> class introduces a component-specific type safety for processing options; e.g.,
	setting an analysis period for data processing, enabling or disabling code mapping, or settings the grouper
	version for a legacy Domain component.  <<<ComponentRuntime>>> is a <<<java.util.Map>>> where the Key (<<<K>>>) 
	is some enumeration and Value (<<<V>>>) is a <<<String>>>.  This class replaces the previous, empty interface,
	<<<RuntimeOption>>> found in earlier GFC releases. 
	
	It's important to note that <<<ComponentRuntime>>> is intentionally abstract forcing component engineers to provide
	their own implementation along with enumerable options.

* Conventions

	* <<<ComponentRuntime>>> classes and options should be placed in the <<<com.mmm.his.cer.[ComponentType]>>> package
	
	* Runtime classes should be in the form <<<[ComponentType]RuntimeOption>>>
	
	* Runtime enumerations should be in the form <<<[ComponentType]Option>>>
	
* Examples

+---
package com.mmm.his.cer.demo;

/**
 * Create a set of enumerated options
 */
public enum DemoOption {
	ENABLE_CODE_MAPPING,
	ENABLE_LOCAL_CACHE;
}
+---

+---
package com.mmm.his.cer.demo;

/**
 * Create a runtime option class which specifies the type of
 * options it will contain
 */
public class DemoRuntimeOption extends ComponentRuntime<DemoOption> {
	private static final long serialVersionUID = 1L;
	
	/** additional defined features... **/
}
+---

+---
package com.mmm.his.cer.demo.v1200;

public class DemoComponent 
	extends Component<DemoClaim, DemoOption, DemoRuntimeOption> {
	
	public void process(DemoClaim claim){ ... }
	public void reconfigure(DemoRuntimeOption options) { ... }
}
+---

* Considerations

	* <<<ComponentRuntime>>> provides type safety for option keys
	
	* The generic type definition added to <<<Processable>>> eliminates the explicit cast required to extract option within a component class
	
	* The <<<Processable>>> definition is improved to specify Claim, Option type, and Option classes - see {{{http://uswfdap017d:8080/gfc/apidocs/com/mmm/his/cer/foundation/Processable.html} Processable}}
	
	* Options that were previously managed at the claim level, for example APR <<<option_flags>>>, should be moved to an Options enum
	
	* Some components may not have Options, but are still required to satisfy the <<<Processable>>> signature
