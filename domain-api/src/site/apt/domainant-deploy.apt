Deploy

	As of version 2.2.0-SNAPSHOT

	Deploy provides Dependency Management support for Legacy Java components as part of the 
	DomainAnt build. Adding maven-ant-tasks-2.1.3.jar to the Apache Ant installed libraries 
	allows the use of Maven artifacts with Ant.  Artifacts all us to describe projects (pom) and 
	resources (dependency, jar, zip, etc...) to facilitate sharing - Repository push/pull, 
	dependency management.
	
	MavenAnt can be found via the 
	{{{http://maven.apache.org/ant-tasks/download.cgi}Apache Software Download site.}}
	Select a mirror, navigate, download.

* Usage

	Deploy relies on two configured variables for success found in the deploy.properties file - version
	and artifact. Artifact and Version are how the Domain-generated Jars will presented in the Sonatype 
	Nexus catalog.  Deploy will upload Binaries along with Binary + Sources jars.  
	
	Deploy can be invoked directly via Ant as

+---
	ant -buildfile deploy.xml
+---

	or appended to an Ant target dependency list

+---
	<target name="someTarg" depends="... deploy">
+---

Files

	* Deploy files should be placed directly in the build directory.  File downloads are not currently
	active.  Please email jflores6@mmm.com for a current distribution.

* Considerations

	* Deploy is tested with Apache-ant-1.9.3
	
	* A Maven installation is required.  Deploy is tested with Apache-maven-3.2.2.
	
	* Eliminate deploy.properties.  Artifact and Version can easily by added to the build.xml directly
	or referenced as properties from build.properties.  This file is only to enforce the concept of these
	variables (for those non-familiar with Maven) and make known their presence.
	
	* Credentials are listed directly in the file.  This isn't that big-a-deal, Sonatype Nexus has a separate
	account(s) for managing the catalog.